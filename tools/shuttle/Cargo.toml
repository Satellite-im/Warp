[package]
name = "shuttle"
version.workspace = true
edition.workspace = true
license.workspace = true
rust-version.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []
# redb_store = ["rust-ipfs/redb_data_store"]

[dependencies]
warp.workspace = true

rust-ipfs = { workspace = true, features = ["webrtc_transport", "experimental_stream"] }
libipld.workspace = true
uuid = { workspace = true, features = ["serde", "v4"] }
futures.workspace = true
async-trait.workspace = true
async-stream.workspace = true
anyhow.workspace = true
serde.workspace = true
serde_json.workspace = true
either = { workspace = true, features = ["serde"] }

tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-appender = "0.2"

chrono = { workspace = true }

void.workspace = true

clap = { version = "4.4", features = ["derive"] }
zeroize.workspace = true
dotenv = "0.15"
base64 = "0.21"

bs58.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true }
tokio-util = { workspace = true, features = ["full"] }
tokio-stream = { workspace = true, features = ["net"] }
gloo = "0.7"

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1", default-features = false, features = ["sync", "macros", "io-util", "rt", "time"]}
tokio-util = { workspace = true}
tokio-stream = { workspace = true}
wasm-bindgen = { version = "0.2" }
gloo = "0.7"
web-sys = { version = "0.3" }
js-sys = { version = "0.3" }