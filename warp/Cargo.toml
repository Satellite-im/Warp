[package]
name = "warp"
version = "0.1.0"
description = "TBD"
# readme = "README.md"
license = "MIT"
edition = "2021"
repository = "https://github.com/Satellite-im/Warp"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type = ["cdylib", "rlib", "staticlib"]


[dependencies]

# Async and futures crates
futures = { version = "0.3" }
async-trait = { version = "0.1" }

# Crypto crates
x25519-dalek = { version = "1" }
ed25519-dalek = { version = "1" }
curve25519-dalek = "3.2"
blake2 = { version = "0.10" }
sha1 = { version = "0.10" }
sha2 = { version = "0.10" }
sha3 = { version = "0.10" }
hmac = { version = "0.12.0", default-features = false }
digest = { version = "0.10" }
aes-gcm = { version = "0.10", features = ["stream"] }
zeroize = "1"
rand = { version = "0.8" }
multihash = { version = "0.18", features = ["sha1"] }
did-key = { git = "https://github.com/Satellite-im/did-key.rs", branch = "backport-patch" }
tiny-bip39 = "1.0"

# Error handling crates
anyhow = { version = "1" }
thiserror = "1.0"

# Sync crates
parking_lot = { version = "0.12", features = ["send_guard", "serde"] }
cfg-if = "1.0"
once_cell = "1.16"

# Time crate
chrono = { version = "0.4", features = ["serde", "wasmbind"] }

# Encoding and Serializing Crates
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = { version = "1.0" }
serde_yaml = "0.9"
toml = "0.5"
bs58 = "0.4"
hex = "0.4"
libipld = { version = "0.15", features = ["serde-codec"] }

# Misc
dyn-clone = "1.0"
uuid = { version = "1", features = ["serde", "v4"] }
derive_more = "0.99"
paste = "1.0"
libc = "0.2"
warp-derive = { path = "./warp-derive" }
sata = { git = "https://github.com/Satellite-im/Sata", rev = "4e4d86751eefdb44cc3f3fc473e231773b676173" }
tracing = { default-features = false, features = ["log"], version = "0.1" }
tracing-futures = { default-features = false, features = [
    "std-future",
    "std",
    "futures-03",
], version = "0.2" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
getrandom = { version = "0.2" }
tokio = { version = "1", features = ["full"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2" }
wasm-bindgen-futures = "0.4.30"
wasm-streams = "0.2"
gloo = "0.7"
getrandom = { version = "0.2", features = ["js"] }
web-sys = { version = "0.3" }
js-sys = { version = "0.3" }
serde-wasm-bindgen = "0.4.2"
console_error_panic_hook = { version = "0.1.6" }


[features]
default = []
wasm_debug = []

# These are use for build.rs to install cbindgen and nightly toolchain to generate headers
# Note this will change in the future once its fixed upstream
build-header = []
force-install = []

[build-dependencies]
cbindgen = "0.23"